<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/21/2022 10:03:48 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NB-HQ-LT116"
  DTS:CreatorName="NH\SBalla"
  DTS:DTSID="{FD18CA95-BD79-4B73-A8C1-265D97A1B124}"
  DTS:EnableConfig="True"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.132"
  DTS:LocaleID="1033"
  DTS:ObjectName="SendMailScriptTask"
  DTS:PackageType="5"
  DTS:VersionBuild="32"
  DTS:VersionGUID="{7E878064-6093-489F-BB78-0C4AAA0BA325}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Configurations>
    <DTS:Configuration
      DTS:ConfigurationString="C:\NHEligJobs\HAP_SSIS\HAP_CareRadius_EmailConfiguration.dtsConfig"
      DTS:ConfigurationType="1"
      DTS:CreationName=""
      DTS:DTSID="{DA7CB6F7-DB54-4C86-AF64-A86421ACEC01}"
      DTS:ObjectName="HAP_CareRadius_EmailConfiguration" />
  </DTS:Configurations>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BEBD9BF2-F39D-41B8-BE13-F69F4E25948F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailBCC">
      <DTS:VariableValue
        DTS:DataType="8">sballa@nationsbenefits.com;jmakwana@nationsbenefits.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{511F6973-E15B-49A1-9693-1544D8616964}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailBody">
      <DTS:VariableValue
        DTS:DataType="8">This is a system generated email. Please do not reply</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E10F0EA4-53D5-43FA-A8C0-898F2C3AACE9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailCC">
      <DTS:VariableValue
        DTS:DataType="8">sballa@nationsbenefits.com;jmakwana@nationsbenefits.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FD9CDA1D-5B51-420B-ADD3-AC20B021DEA9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailFrom">
      <DTS:VariableValue
        DTS:DataType="8">itreports@nationshearing.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EC80F5BB-A59B-40D4-A1E9-9DAF1316CD18}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailFromName">
      <DTS:VariableValue
        DTS:DataType="8">ITReports</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8ABF6312-F40E-4706-885C-CC9853B267D7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailHostname">
      <DTS:VariableValue
        DTS:DataType="8">smtp.office365.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{853DD27B-256D-4B3B-BD3C-E3508F43C6FA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailPassword">
      <DTS:VariableValue
        DTS:DataType="8">SSN@tions!RSQ220</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8D636E99-A5D9-4E3D-BC7A-CC176BC3B31B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailPort">
      <DTS:VariableValue
        DTS:DataType="8">587</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4A8212A4-61B9-4582-8314-104282C79325}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailSubject">
      <DTS:VariableValue
        DTS:DataType="8">This is a test notication email only</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C48026FA-DBC1-4A2A-9A46-D19759F499EA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailTo">
      <DTS:VariableValue
        DTS:DataType="8">sballa@nationsbenefits.com;jmakwana@nationsbenefits.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6FE3CBF8-4CD6-4DEF-B946-C8488EF1CEFA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailUsername">
      <DTS:VariableValue
        DTS:DataType="8">itreports@nationshearing.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1419BA17-BCF2-456D-9B33-B8D687F9136C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileLocationStats">
      <DTS:VariableValue
        DTS:DataType="8">FileLocationStats</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{22E8C776-6FE4-4F0F-9D2A-F58A7FD966BC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileNameStats">
      <DTS:VariableValue
        DTS:DataType="8">FileNameStats</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Send Mail Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{c3571796-75ea-42c1-b053-7aa93956a6ac}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Send Mail Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_b44e1044a360496082d03d8d3d7e5fba"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::EmailBCC,User::EmailBody,User::EmailCC,User::EmailFrom,User::EmailFromName,User::EmailHostname,User::EmailPassword,User::EmailPort,User::EmailSubject,User::EmailTo,User::EmailUsername,User::FileLocationStats,User::FileNameStats">
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text.RegularExpressions;
using System.Net.Mail;
#endregion

namespace ST_723bc0f21b89498293b2a5c0dd48fbbf
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
        {
            string EmailSubject = Dts.Variables["EmailSubject"].Value.ToString();  //"Stats File From Nations Benefits" ;
            string EmailBody = Dts.Variables["EmailBody"].Value.ToString();  //"Please Do Not Reply";
            int iPriority = 2;

            if (SendMail(EmailSubject, EmailBody, iPriority))
            {
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            else
            {
                //Fails the Task
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        public bool SendMail(string EmailSubject, string EmailBody, int iPriority)
        {
            try
            {
                string EmailHostname = Dts.Variables["EmailHostname"].Value.ToString();
                string EmailPort = Dts.Variables["EmailPort"].Value.ToString();
                string EmailUsername = Dts.Variables["EmailUsername"].Value.ToString();
                string EmailPassword = Dts.Variables["EmailPassword"].Value.ToString();
                //string EmailBody = Dts.Variables["EmailBody"].Value.ToString();
                string EmailTo = Dts.Variables["EmailTo"].Value.ToString();
                string EmailCC = Dts.Variables["EmailCC"].Value.ToString();
                string EmailBCC = Dts.Variables["EmailBCC"].Value.ToString();
                string EmailFrom = Dts.Variables["EmailFrom"].Value.ToString();
                string EmailFromName = Dts.Variables["EmailFromName"].Value.ToString();
                string FileNameStats = Dts.Variables["FileNameStats"].Value.ToString();
                string FileLocationStats = Dts.Variables["FileLocationStats"].Value.ToString();


                Console.WriteLine(EmailHostname);
                Console.WriteLine(EmailPort);
                Console.WriteLine(EmailUsername);
                Console.WriteLine(EmailPassword);
                Console.WriteLine(EmailTo);
                Console.WriteLine(EmailCC);
                Console.WriteLine(EmailBCC);
                Console.WriteLine(EmailFrom);
                Console.WriteLine(EmailFromName);
                Console.WriteLine(FileNameStats);
                Console.WriteLine(FileLocationStats);
                Console.WriteLine(EmailSubject);
                Console.WriteLine(EmailBody);

                SmtpClient smtpClient = new SmtpClient();
                MailMessage message = new MailMessage();

                MailAddress fromAddress = new MailAddress(EmailFrom, EmailFromName);

                //You can have multiple emails separated by ; the regex method splits the EmailTo to a number of emails
                string[] EmailToArray = Regex.Split(EmailTo, ";");
                string[] EmailCCArray = Regex.Split(EmailCC, ";");
                string[] EmailBCCArray = Regex.Split(EmailBCC, ";");

                /*int EmailPortInt = int.Parse(EmailPort);  Not required */  

                smtpClient.Host = EmailHostname;
                smtpClient.Port = int.Parse(EmailPort);
                

                System.Net.NetworkCredential EmailCredentials = new System.Net.NetworkCredential(EmailUsername, EmailPassword);
                smtpClient.Credentials = EmailCredentials;
                smtpClient.EnableSsl = true;
                message.From = fromAddress;

                if (EmailTo != null)
                {
                    for (int i = 0; i < EmailToArray.Length; ++i)
                    {
                        if (EmailToArray[i] != null && EmailToArray[i] != "")
                        {
                            message.To.Add(EmailToArray[i]);
                        }
                    }
                }

                if (EmailCC != null)
                {
                    for (int i = 0; i < EmailCCArray.Length; ++i)
                    {
                        if (EmailCCArray[i] != null && EmailCCArray[i] != "")
                        {
                            message.CC.Add(EmailCCArray[i]);
                        }
                    }
                }

                if (EmailBCC != null)
                {
                    for (int i = 0; i < EmailBCCArray.Length; ++i)
                    {
                        if (EmailBCCArray[i] != null && EmailBCCArray[i] != "")
                        {
                            message.CC.Add(EmailBCCArray[i]);
                        }
                    }
                }

                /* Santhosh Balla Commented
                            switch (iPriority)
                            {
                               case 1:
                                   message.Priority = MailPriority.High;
                                  break;
                             case 3:
                               message.Priority = MailPriority.Low;
                             break;
                       default:
                         message.Priority = MailPriority.Normal;
                       break;
                }

                You can enable this for Attachments.  
                SingleFile is a string variable for the file path.
                 foreach (string SingleFile in myFiles)
                {

                */

                
                /* 
                 If you have attachments that you would like to send, you will have to configure here.  
                 Please do not send any files with details about members. Just alerts, notification emails 
                */

                /* Santhosh Balla | Uncomment the below two lines of code to send attachements
                   //Attachment myAttachment = new Attachment(FileLocationStats + FileNameStats);
                   // message.Attachments.Add(myAttachment);
                */
               // }

                message.Subject = EmailSubject;
                message.IsBodyHtml = true;
                message.Body = EmailBody;

                smtpClient.Send(message);
                return true;
            }
            catch (Exception ex)
            {
                return true;
            }
        }


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_723bc0f21b89498293b2a5c0dd48fbbf.Properties.Settings.get_Default():ST_723bc0f21b89498293b2a5c0dd48fbbf.Properties.Sett" +
    "ings")]

namespace ST_723bc0f21b89498293b2a5c0dd48fbbf.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_b44e1044a360496082d03d8d3d7e5fba.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{f0d1d7ea-90a2-4d1d-86b6-fedc1fcf6d3e}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_723bc0f21b89498293b2a5c0dd48fbbf</RootNamespace>
    <AssemblyName>ST_b44e1044a360496082d03d8d3d7e5fba</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_b44e1044a360496082d03d8d3d7e5fba</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_b44e1044a360496082d03d8d3d7e5fba</msb:DisplayName>
    <msb:ProjectId>{D97A8177-D20F-40A8-B777-3F5F9C99C4B6}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_b44e1044a360496082d03d8d3d7e5fba.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_723bc0f21b89498293b2a5c0dd48fbbf")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_723bc0f21b89498293b2a5c0dd48fbbf")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_723bc0f21b89498293b2a5c0dd48fbbf.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_723bc0f21b89498293b2a5c0dd48fbbf.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_723bc0f21b89498293b2a5c0dd48fbbf.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_723bc0f21b89498293b2a5c0dd48fbbf.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_723bc0f21b89498293b2a5c0dd48fbbf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_b44e1044a360496082d03d8d3d7e5fba.dll">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
AgAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAP4DAQAAAAAABgBfAhsFBgDuAhsFBgCr
AQgFDwCPBQAABgDYAaIEBgBCAqIEBgAjAqIEBgDVAqIEBgB/AqIEBgCYAqIEBgDvAaIEBgAKAkAD
CgCzAoIDCgAkAYIDDgCJBuUDDgCEAOUDDgAbBuUDDgCrA10GBgDKBEwEBgBcBEwEBgCOAQgFBgA9
BkwEBgDrBDsFBgDbBI0EDgBeAc8DDgC/Ac8DDgBAAXgEBgBzARsFCgC9A4IDEgDRBcUAEgCQAMUA
BgC9AEwEDgC5BvQFBgABAEwEDgCmBl0GBgBcA0wEDgC0BOUDBgDvAEwEBgCZAEwEBgDWBqIEAAAA
AAcAAAAAAAEAAQABABAAbQQcAzkAAQABAAAAEABCBZ4FWQABAAQAAAEQANsFngVtAAMACAADAQAA
LwYAAFEABAALABEAYQTGABEAFAHKABEAdADOAAYGNgDSAFaAEwbVAFaA9ADVAFAgAAAAAIYAcwQG
AAEAxCAAAAAAhgD1A9kAAQAQJAAAAACGGPsEBgAEABgkAAAAAIMY+wQGAAQAICQAAAAAkwjnBOAA
BABMJAAAAACTCPwA5QAEAFMkAAAAAJMICAHqAAQAWyQAAAAAlghuBvAABQBiJAAAAACGGPsEBgAF
AGokAAAAAJEYAQX1AAUAAAABAFAGAAACAMgGAAADAO0GAAABABYDCQD7BAEAEQD7BAYAGQD7BAoA
KQD7BBAAMQD7BBAAOQD7BBAAQQD7BBAASQD7BBAAUQD7BBAAWQD7BBAAYQD7BBAAaQD7BAYAqQD7
BAYA0QD7BBUA4QD7BAYAcQAnBiEA6QDNBSYA8QBDBCsA+QAMAzEAsQBaAzUA6QB6BgEAAQHlAFgA
eQD7BAYAgQD7BAYAiQD7BF0ACQFoBmMAeQCdBhAAEQFYAWoAeQCUBgEAkQD7BF0AeQDkBW8AeQA1
BHYAgQBTBHsAIQHfBoEAgQDUBIcAKQFrABAAgQAQAIcAgQBEBhAAgQAmBHYAgQC/BhAAeQBvAI0A
cQD7BAYAsQD7BAYAMQGrAJMAMQHSBpwAuQD7BKIA2QD7BAYACAAUALwACAAYAMEAKQBzADABLgAL
AAgBLgATABEBLgAbADABLgAjADkBLgArAGIBLgAzAGIBLgA7AGIBLgBDADkBLgBLAGgBLgBTAGIB
LgBbAH8BQwBjAMEASQBzADABYQB7AMEAYwBrAMEAGwA5AAMAAQAEAAMAAADrBPkAAAAcAf4AAABy
BgMBAgAFAAMAAgAGAAUAAQAHAAUAAgAIAAcABIAAAAEAAAAzIORiAAAAAAAAPgAAAAQAAAAAAAAA
AAAAAKoAYgAAAAAADgAAAAAAAAAAAAAAswBjAwAAAAAEAAAAAAAAAAAAAACqAEwEAAAAAA4AAAAA
AAAAAAAAALMAFwAAAAAAAAAAAAEAAABMBQAABQACAAAAAEludDMyADxNb2R1bGU+AGdldF9DQwBN
aWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBTVF9iNDRlMTA0NGEzNjA0OTYw
ODJkMDNkOGQzZDdlNWZiYQBtc2NvcmxpYgBBZGQAU2VuZABkZWZhdWx0SW5zdGFuY2UATWFpbE1l
c3NhZ2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQ29uc29s
ZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFdyaXRlTGluZQBUeXBlAEZhaWx1cmUA
Z2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVj
dE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBQYXJzZQBFZGl0b3JCcm93c2FibGVT
dGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmli
dXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5
VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3Jr
QXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0
aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9k
dWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50
cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGli
aWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFNUXzcyM2JjMGYyMWI4OTQ5ODI5M2IyYTVj
MGRkNDhmYmJmAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcATWljcm9zb2Z0LlNx
bFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRh
c2sATmV0d29ya0NyZWRlbnRpYWwAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1v
ZGVsAFN5c3RlbS5OZXQuTWFpbABTZW5kTWFpbABTVF9iNDRlMTA0NGEzNjA0OTYwODJkMDNkOGQz
ZDdlNWZiYS5kbGwAc2V0X0lzQm9keUh0bWwAc2V0X0VuYWJsZVNzbABnZXRfSXRlbQBTeXN0ZW0A
c2V0X0Zyb20ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9u
AFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAE1haWxBZGRyZXNzQ29sbGVj
dGlvbgBFeGNlcHRpb24AZ2V0X1RvAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0
b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZp
Y2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfNzIzYmMwZjIxYjg5NDk4MjkzYjJhNWMwZGQ0OGZiYmYu
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzcyM2JjMGYy
MWI4OTQ5ODI5M2IyYTVjMGRkNDhmYmJmLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5n
cwBzZXRfQ3JlZGVudGlhbHMAU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25zAFN1Y2Nlc3MA
TWFpbEFkZHJlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAE9iamVjdABzZXRfU3ViamVjdABFbWFp
bFN1YmplY3QAU3lzdGVtLk5ldABTcGxpdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTbXRw
Q2xpZW50AHNldF9Qb3J0AHNldF9Ib3N0AElDcmVkZW50aWFsc0J5SG9zdABSZWdleABzZXRfQm9k
eQBFbWFpbEJvZHkAZ2V0X0Fzc2VtYmx5AG9wX0luZXF1YWxpdHkAaVByaW9yaXR5AAAAGUUAbQBh
AGkAbABTAHUAYgBqAGUAYwB0AAATRQBtAGEAaQBsAEIAbwBkAHkAABtFAG0AYQBpAGwASABvAHMA
dABuAGEAbQBlAAATRQBtAGEAaQBsAFAAbwByAHQAABtFAG0AYQBpAGwAVQBzAGUAcgBuAGEAbQBl
AAAbRQBtAGEAaQBsAFAAYQBzAHMAdwBvAHIAZAAAD0UAbQBhAGkAbABUAG8AAA9FAG0AYQBpAGwA
QwBDAAARRQBtAGEAaQBsAEIAQwBDAAATRQBtAGEAaQBsAEYAcgBvAG0AABtFAG0AYQBpAGwARgBy
AG8AbQBOAGEAbQBlAAAbRgBpAGwAZQBOAGEAbQBlAFMAdABhAHQAcwAAI0YAaQBsAGUATABvAGMA
YQB0AGkAbwBuAFMAdABhAHQAcwAAAzsAAAEAcVMAVABfADcAMgAzAGIAYwAwAGYAMgAxAGIAOAA5
ADQAOQA4ADIAOQAzAGIAMgBhADUAYwAwAGQAZAA0ADgAZgBiAGIAZgAuAFAAcgBvAHAAZQByAHQA
aQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAAkkISNF9C40W0RlIFPG2+BwAEIAEBCAMgAAEF
IAEBEREEIAEBDgUgAQERZQUHAw4OCAQgABJ1BCAAEnkFIAESfRwDIAAcAyAADh4HFQ4ODg4ODg4O
Dg4SPRJBEkUdDh0OHQ4SSQgICAIEAAEBDgUgAgEODgYAAh0ODg4EAAEIDgYgAQESgI0EIAEBAgUg
AQESRQUAAgIODgUgABKAlQUgAQESQQgAARKAmRGAnQUgABKAoQcgAgEOEoChCLd6XFYZNOCJCImE
Xc2AgMyRBAAAAAAEAQAAAAMGEl0DBhJhAwYSEAIGCAMGERQGIAMCDg4IBAAAEl0EAAASYQUAAQES
YQQAABIQAwAAAQQIABJdBAgAEmEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEIAQACAAAAAAAoAQAjU1RfNzIzYmMwZjIxYjg5NDk4MjkzYjJhNWMwZGQ0OGZiYmYA
AAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUAAAC0AAAAzsrv
vgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJz
aW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0
ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBB
RFC0AAAA5DQAAAAAAAAAAAAA/jQAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPA0AAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQDkYjMgAAABAORiMyA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfADcAMgAzAGIAYwAwAGYAMgAxAGIAOAA5ADQAOQA4ADIAOQAzAGIAMgBhADUAYwAwAGQA
ZAA0ADgAZgBiAGIAZgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4
ADIANAAzAC4AMgA1ADMAMQA2AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfAGIANAA0AGUAMQAwADQANABhADMANgAwADQAOQA2ADAAOAAyAGQAMAAzAGQAOABkADMAZAA3
AGUANQBmAGIAYQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AYgA0ADQAZQAxADAANAA0AGEAMwA2ADAANAA5ADYAMAA4ADIAZAAwADMAZAA4
AGQAMwBkADcAZQA1AGYAYgBhAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADcAMgAzAGIAYwAwAGYAMgAxAGIAOAA5ADQAOQA4ADIAOQAzAGIAMgBhADUAYwAw
AGQAZAA0ADgAZgBiAGIAZgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AOAAyADQAMwAuADIANQAzADEANgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AOAAyADQAMwAuADIANQAzADEANgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAQNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="186,42"
          Id="Package\Send Mail Script Task"
          TopLeft="398,51" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>